namespace Smart_Regions_Sketcher
{
    public partial class MainInterface : System.Windows.Forms.Form
    {
        ISketcher sketcher;

        SelectorSketcher selector = new SelectorSketcher();

        System.Drawing.Bitmap map = null;

        EditForm eform;

        TestRegionForm tform = new TestRegionForm();

        System.Drawing.Size size;
        System.Drawing.Point loc;

        System.Collections.Generic.List<System.Windows.Forms.Panel> selectors = new System.Collections.Generic.List<System.Windows.Forms.Panel>();

        public MainInterface()
        {
            InitializeComponent();

	    sketcher = SketchersFactory.CreateSketcher("Lines",sketchPanel.CreateGraphics());
	    sketcher.SketchColor = sketchPanel.ForeColor;
	    sketcher.UnSketchColor = sketchPanel.BackColor;
        }


        protected override void OnSizeChanged(System.EventArgs e)
        {
            lockCheckBox.Checked = true;

            sketchPanel.Size = new System.Drawing.Size(this.Width - 193, this.Height - 25);

            functionsPanel.Location = new System.Drawing.Point(this.Width - 110, functionsPanel.Location.Y);

            if (sketcher != null)
            {
                sketcher.Graphics.Clear(sketcher.UnSketchColor);
                sketcher.Graphics = sketchPanel.CreateGraphics();
                sketcher.Sketch();
            }

            base.OnSizeChanged(e);

            tform.Size = sketchPanel.Size;

            lockCheckBox.Checked = false;
        }

        private System.Drawing.Point firstPoint = System.Drawing.Point.Empty;

        private System.Drawing.Color Negative(System.Drawing.Color c)
        {
            return System.Drawing.Color.FromArgb(255 - c.R, 255 - c.G, 255 - c.B);
        }

        private void SketchMouseMoved(object sender, System.Windows.Forms.MouseEventArgs e)
        {
            if ((e.X < sketchPanel.Width && e.X >= 0) && (e.Y < sketchPanel.Height && e.Y >= 0))
            {
                loactionLabel.Text = e.Location.ToString();

                label1.Location = new System.Drawing.Point(label1.Location.X,e.Y + sketchPanel.Location.Y);
                label2.Location = new System.Drawing.Point(e.X + sketchPanel.Location.X, label2.Location.Y);
            }
            if (lockCheckBox.Checked || selectorsCheckBox.Checked)
            {
                if (e.Button == System.Windows.Forms.MouseButtons.Left)
                {
                    if (e.X >= sketchPanel.Width || e.Y >= sketchPanel.Height)
                        return;
                    if (firstPoint == System.Drawing.Point.Empty)
                    {
                        firstPoint = e.Location;
                        loc = e.Location;
                        return;
                    }
                    else
                    {
                        if (e.X >= firstPoint.X && e.Y >= firstPoint.Y)
                            size = new System.Drawing.Size(e.X - firstPoint.X, e.Y - firstPoint.Y);
                        else
                        {
                            if (e.Y < firstPoint.Y && e.X > firstPoint.X)
                            {
                                //System.Windows.Forms.MessageBox.Show("");
                                size = new System.Drawing.Size(e.X - firstPoint.X, firstPoint.Y - e.Y);
                                loc = new System.Drawing.Point(loc.X, e.Y);
                            }
                            else
                            {
                                if (e.Y > firstPoint.Y && e.X < firstPoint.X)
                                {
                                    //System.Windows.Forms.MessageBox.Show("");
                                    size = new System.Drawing.Size(firstPoint.X - e.X,e.Y - firstPoint.Y);
                                    loc = new System.Drawing.Point(e.X, loc.Y);
                                }
                                else
                                {
                                    size = new System.Drawing.Size(firstPoint.X - e.X, firstPoint.Y - e.Y);
                                    loc = e.Location;
                                }
                            }
                        }

                        if (selectionPanel.ClientSize.Width > 5 && selectionPanel.ClientSize.Height > 5)
                        {
                            if (map == null)
                            {
                                map = new System.Drawing.Bitmap(sketchPanel.ClientSize.Width, sketchPanel.ClientSize.Height);

                                for (int i = 0; i < map.Width; i++)
                                    for (int ii = 0; ii < map.Width; ii++)
                                        map.SetPixel(i, ii, sketchPanel.BackColor);
                                sketcher.DrawToBitmap(map);

                                selector.Sketch(sketcher, new System.Drawing.Point(100, 100), new System.Drawing.Size(100, 100));

                                Form1 d = new Form1(map);
                                d.ShowDialog();

                                selector.UnSketch(sketcher.Graphics,map);
                            }
                            selector.UnSketch(sketcher.Graphics, map);
                            selector.Sketch(sketcher, loc, size);
                            //   selectionPanel.BackgroundImage = CreateImage(selectionPanel.Location,selectionPanel.ClientSize);
                        }
                    }
                }
                return;
            }
            sketcher.SketchMouseMoved(sender, e);
            if(e.Button == System.Windows.Forms.MouseButtons.Left)
                tform.SetRegion(sketcher);
        }

        private void SketchMouseUp(object sender, System.Windows.Forms.MouseEventArgs e)
        {
            if (lockCheckBox.Checked || selectorsCheckBox.Checked)
            {
                selectionPanel.Visible = false;
                firstPoint = System.Drawing.Point.Empty;
                return;
            }
            sketcher.SketchMouseUp(sender, e);
            tform.SetRegion(sketcher);
        }

        private void SketchPanelPaint(object sender, System.Windows.Forms.PaintEventArgs e)
        {
            sketcher.Sketch();
        }

        private void SketchMethodChanged(object sender, System.EventArgs e)
        {
            sketcher.Clear();

	    sketcher = SketchersFactory.CreateSketcher(((System.Windows.Forms.RadioButton)sender).Text,sketchPanel.CreateGraphics());
	    sketcher.SketchColor = sketchPanel.ForeColor;
	    sketcher.UnSketchColor = sketchPanel.BackColor;
        }

        private void clearButton_Click(object sender, System.EventArgs e)
        {
            sketcher.Clear();
            tform.ResetRegion();
            if (selectorsCheckBox.Checked)
            {
                selectorsCheckBox.Checked = false;
            }
        }

        private void editPointsButton_Click(object sender, System.EventArgs e)
        {
            editPointsButton.Enabled = false;
            eform = new EditForm(sketcher.SketchPoints, sketchPanel.ClientSize);

            eform.FormClosed +=new System.Windows.Forms.FormClosedEventHandler(OnEditFormClose);
            eform.ChangeHappend += new System.EventHandler(OnEditFormChanges);
            eform.SelectClicked += new System.EventHandler(OnEditFormSelect);

            eform.Show();
        }

        private void OnEditFormClose(object c, System.EventArgs e)
        {
            eform = null;

            editPointsButton.Enabled = true;
        }

        private void OnEditFormChanges(object c, System.EventArgs e)
        {
            sketcher.UnSketch();

            sketcher.SketchPoints = eform.Points;

            sketcher.Sketch();
            tform.SetRegion(sketcher);
        }

        private void OnEditFormSelect(object c, System.EventArgs e)
        {
            System.Drawing.Point sel = (System.Drawing.Point)c;
            sketcher.Graphics.Clear(sketcher.UnSketchColor);
            sketcher.Sketch();

            sketcher.Graphics.DrawEllipse(new System.Drawing.Pen((sketcher.SketchColor != System.Drawing.Color.Black ? System.Drawing.Color.Black : System.Drawing.Color.Red)), new System.Drawing.Rectangle(sel, new System.Drawing.Size(10, 10)));
        }

        private void ShowSelectPanels()
        {

            for (int i = 0; i < sketcher.SketchPoints.Count; i++)
            {
                if (i > 0)
                    if (sketcher.SketchPoints[i - 1].X == sketcher.SketchPoints[i].X && sketcher.SketchPoints[i - 1].Y == sketcher.SketchPoints[i].Y)
                        continue;
                System.Windows.Forms.Panel x = new System.Windows.Forms.Panel();
                x.TabIndex = i;
                x.Size = new System.Drawing.Size(8, 8);
                x.Location = sketcher.SketchPoints[i];
                x.BackColor = System.Drawing.Color.Blue;
                x.MouseMove += new System.Windows.Forms.MouseEventHandler(SelectorPanelMouseMove);
                x.MouseUp += new System.Windows.Forms.MouseEventHandler(SelectorPanelMouseUp);

                selectors.Add(x);
                sketchPanel.Controls.Add(x);
            }
        }

        private void HideSelectPanels()
        {
            foreach (System.Windows.Forms.Panel x in selectors)
                sketchPanel.Controls.Remove(x);
            selectors.Clear();
        }

        private void SelectorPanelMouseMove(object c, System.Windows.Forms.MouseEventArgs e)
        {
            if (e.Button == System.Windows.Forms.MouseButtons.Left)
            {
                ((System.Windows.Forms.Panel)c).BackColor = System.Drawing.Color.Red;
                sketcher.UnSketch();

                ((System.Windows.Forms.Panel)c).Location = new System.Drawing.Point(((System.Windows.Forms.Panel)c).Location.X + e.X, ((System.Windows.Forms.Panel)c).Location.Y + e.Y);

                sketcher.SketchPoints[((System.Windows.Forms.Panel)c).TabIndex] = ((System.Windows.Forms.Panel)c).Location;

                if (eform != null)
                    eform.Points[((System.Windows.Forms.Panel)c).TabIndex] = ((System.Windows.Forms.Panel)c).Location;

                if (((System.Windows.Forms.Panel)c).TabIndex + 1 < sketcher.SketchPoints.Count)
                {
                    sketcher.SketchPoints[((System.Windows.Forms.Panel)c).TabIndex + 1] = ((System.Windows.Forms.Panel)c).Location;

                    if (eform != null)
                        eform.Points[((System.Windows.Forms.Panel)c).TabIndex + 1] = ((System.Windows.Forms.Panel)c).Location;
                }

                sketcher.Sketch();

                tform.SetRegion(sketcher);

                Update();
            }
        }

        private void SelectorPanelMouseUp(object c, System.Windows.Forms.MouseEventArgs e)
        {
            ((System.Windows.Forms.Panel)c).BackColor = System.Drawing.Color.Blue;
        }

        private void selectorsCheckBox_CheckedChanged(object sender, System.EventArgs e)
        {
            lockCheckBox.Checked = selectorsCheckBox.Checked;
            lockCheckBox.Enabled = !selectorsCheckBox.Checked;

            if (selectorsCheckBox.Checked)
                ShowSelectPanels();
            else
                HideSelectPanels();
        }

        private void moveButton_Click(object sender, System.EventArgs e)
        {

            if (sketcher.SketchPoints.Count <= 0)
                return;
            int minX = sketcher.SketchPoints[0].X;
            int minY = sketcher.SketchPoints[0].Y;

            for (int i = 1; i < sketcher.SketchPoints.Count; i++)
            {
                if (minX > sketcher.SketchPoints[i].X)
                    minX = sketcher.SketchPoints[i].X;

            }

            for (int i = 1; i < sketcher.SketchPoints.Count; i++)
            {
                if (minY > sketcher.SketchPoints[i].Y)
                    minY = sketcher.SketchPoints[i].Y;
            }

            MoveForm mv = new MoveForm(new System.Drawing.Point(this.Width - 1, this.Height - 1));

            if (mv.ShowDialog() == System.Windows.Forms.DialogResult.OK)
            {
                int xratio = minX - mv.XValue;
                int yratio = minY - mv.YValue;

                sketcher.UnSketch();

                if (selectorsCheckBox.Checked)
                {
                    HideSelectPanels();
                }

                if (eform != null)
                    eform.Close();

                for (int i = 0; i < sketcher.SketchPoints.Count; i++)
                {
                    sketcher.SketchPoints[i] = new System.Drawing.Point(sketcher.SketchPoints[i].X - xratio, sketcher.SketchPoints[i].Y - yratio);
                }

                sketcher.Sketch();

                if (selectorsCheckBox.Checked)
                    ShowSelectPanels();

                tform.SetRegion(sketcher);

            }
        }

        private void importButton_Click(object sender, System.EventArgs e)
        {
            openFileDialog.Filter = "Regions Files (*.ycr) | *.ycr;";

            if (openFileDialog.ShowDialog() == System.Windows.Forms.DialogResult.OK)
            {
                YazanLib.Media.RegionData data = YazanLib.Media.CustomRegions.ImportRegion(openFileDialog.FileName);

                sketcher = SketchersFactory.CreateSketcher(data.Type, sketchPanel.CreateGraphics());
                sketcher.SketchColor = sketchPanel.ForeColor;
                sketcher.UnSketchColor = sketchPanel.BackColor;
                sketcher.SketchPoints = data.Points;

                sketcher.Sketch();
                tform.SetRegion(sketcher);
            }
        }

        private void exportButton_Click(object sender, System.EventArgs e)
        {
            saveFileDialog.Filter = "Regions Files (*.ycr) | *.ycr;";

            if (saveFileDialog.ShowDialog() == System.Windows.Forms.DialogResult.OK)
            {
                YazanLib.Media.CustomRegions.ExportRegion(new YazanLib.Media.RegionData(sketcher.Type,sketcher.SketchPoints),saveFileDialog.FileName);
            }
        }

        private void MainInterface_Load(object sender, System.EventArgs e)
        {
            tform.Show(this);
            tform.Size = sketchPanel.Size;
        }
    }
}
